dist: trusty
language: go

services:
  - postgresql
  - docker

os:
  - linux

go:
  - "1.15.x"

install: true

before_script:
  - psql -c 'create database test;' -U postgres
  - GO111MODULE=on go build -mod=vendor ./cmd/migration
  - mv migration $GOPATH/bin

script:
  - GO111MODULE=on go test -mod=vendor -race -coverprofile=coverage.txt -covermode=atomic ./...
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action status
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action "up 1"
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action status
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action up
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action status
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action "down 1"
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action status
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action down
  - migration exec -url "postgres://postgres@localhost:5432/test?sslmode=disable" -dir ./testdata -action status

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

deploy:
- provider: script
  skip_cleanup: true
  script: curl -sL https://git.io/goreleaser | bash
  on:
    tags: true
    condition: $TRAVIS_OS_NAME = linux
    go: "1.12.x"
